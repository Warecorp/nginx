{{ $static := (getenv "NGINX_STATIC_EXT_REGEX" "css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg|mp4|svgz|ogg|ogv|pdf|pptx?|zip|tgz|gz|rar|bz2|doc|xls|exe|tar|mid|midi|wav|bmp|rtf|txt") }}

  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  # location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
  #   try_files $uri @rails;

  #   access_log off;
  #   gzip_static on; # to serve pre-gzipped version

  #   expires max;
  #   add_header Cache-Control public;

  #   # Some browsers still send conditional-GET requests if there's a
  #   # Last-Modified header or an ETag header even if they haven't
  #   # reached the expiry date sent in the Expires header.
  #   add_header Last-Modified "";
  #   add_header ETag "";
  #   break;
  # }

  location / {
    location ~* ^.+\.(?:{{ $static }})$ {
        access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
        tcp_nodelay {{ getenv "NGINX_STATIC_TCP_NODELAY" "off" }};
        expires {{ getenv "NGINX_STATIC_EXPIRES" "7d" }};

        add_header Pragma "cache";
        add_header Cache-Control "public";

        open_file_cache {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE" "max=1000 inactive=30s" }};
        open_file_cache_valid {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_VALID" "30s" }};
        open_file_cache_min_uses {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_MIN_USES" "2" }};
        open_file_cache_errors {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_ERRORS" "off" }};

        location ~* ^.+\.(?:svgz|tgz|gz)$ {
            gzip off;
            add_header Content-Encoding gzip;
        }

        {{ if getenv "NGINX_STATIC_404_TRY_INDEX" }}
        try_files $uri @rails;
        {{ end }}
    }
    try_files $uri @rails;
  }

  location @rails {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    client_max_body_size 100m;
    proxy_cache off;
    proxy_pass http://app_server;
  }
