{{ $static := (getenv "NGINX_STATIC_EXT_REGEX" "css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg|mp4|svgz|ogg|ogv|pdf|pptx?|zip|tgz|gz|rar|bz2|doc|xls|exe|tar|mid|midi|wav|bmp|rtf|txt") }}

include fastcgi.conf;

{{ $index := (getenv "NGINX_FASTCGI_INDEX" "index.php") }}
index {{ getenv "NGINX_INDEX_FILE" "index.php index.html" }};

location / {
    location ~* ^.+\.(?:{{ $static }})$ {
        access_log {{ getenv "NGINX_STATIC_ACCESS_LOG" "off" }};
        tcp_nodelay {{ getenv "NGINX_STATIC_TCP_NODELAY" "off" }};
        expires {{ getenv "NGINX_STATIC_EXPIRES" "7d" }};

        add_header Pragma "cache";
        add_header Cache-Control "public";

        open_file_cache {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE" "max=1000 inactive=30s" }};
        open_file_cache_valid {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_VALID" "30s" }};
        open_file_cache_min_uses {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_MIN_USES" "2" }};
        open_file_cache_errors {{ getenv "NGINX_STATIC_OPEN_FILE_CACHE_ERRORS" "off" }};

        location ~* ^.+\.(?:svgz|tgz|gz)$ {
            gzip off;
            add_header Content-Encoding gzip;
        }

        {{ if getenv "NGINX_STATIC_404_TRY_INDEX" }}
        try_files $uri /{{ $index }}?$args;
        {{ end }}
    }

    try_files $uri /{{ $index }}?$args;
}

location ~* /\.git { deny all; return 403; }
location ~* ^/build/ { deny all; return 403; }
location ~* ^/cache/ { deny all; return 403; }
location ~* ^/cgi-bin/ { deny all; return 403; }
location ~* ^/uploads/import/ { deny all; return 403; }
location ~* ^/conf/ { deny all; return 403; }
location ~* ^/tests/ { deny all; return 403; }
location ~* ^/vendor/ { deny all; return 403; }

location ~* ^/index\.php(/|$) {
    # send to fastcgi
    include fastcgi.conf;
    fastcgi_param SCRIPT_NAME /index.php;
    fastcgi_param SCRIPT_FILENAME $realpath_root/index.php;
    fastcgi_param X_REWRITE 1;
    fastcgi_pass php; # where 'php-fpm' is the upstream, probably defined in nginx.conf 
}

# location ~ [^/]\.php(/|$) {
#     fastcgi_split_path_info ^(.+?\.php)(/.*)$;
#     fastcgi_pass php;
#     track_uploads {{ getenv "NGINX_TRACK_UPLOADS" "uploads 60s" }};
# }

